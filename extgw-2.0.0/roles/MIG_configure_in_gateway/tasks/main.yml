---
  - set_fact:
      hub_product: "gateway/wso2telcohub-{{hub_version}}"

#-------------------Copy user-mgt.xml------------------  Since there are no chnages in the copying file with the oroginal
#  - name: mig configurations in am gateway - copying user-mgt.xml
#    copy:
#     src: "user-mgt.xml"
#     dest: "{{extract_location}}/{{hub_product}}/repository/conf"


#-------------------Copy registry.xml------------------
  - name: mig configurations in am gateway - copying registry.xml
    copy:
     src: "registry.xml"
     dest: "{{extract_location}}/{{hub_product}}/repository/conf"

#-------------------Mysql Changes in registry.xml------------------
  - name: mig configurations in am gateway - Change dbConfig sharedregistry to govregistry repository/conf/registry.xml
    replace:
      dest: "{{extract_location}}/{{hub_product}}/repository/conf/registry.xml"
      regexp: 'mysql_user'
      replace: '{{mysql_user}}'
      backup: yes

  - name: mig configurations in am gateway - Change dbConfig sharedregistry to govregistry repository/conf/registry.xml
    replace:
      dest: "{{extract_location}}/{{hub_product}}/repository/conf/registry.xml"
      regexp: 'mysql_port'
      replace: '{{mysql_port}}'
      backup: yes

  - name: mig configurations in am gateway - Change dbConfig sharedregistry to govregistry repository/conf/registry.xml
    replace:
      dest: "{{extract_location}}/{{hub_product}}/repository/conf/registry.xml"
      regexp: 'mysql_host'
      replace: '{{mysql_host}}'
      backup: yes

#-------------------Change dbConfig sharedregistry to govregistry ------------------
  - name: mig configurations in am gateway - Change dbConfig sharedregistry to govregistry repository/conf/registry.xml
    replace:
      dest: "{{extract_location}}/{{hub_product}}/repository/conf/registry.xml"
      regexp: 'sharedregistry'
      replace: 'govregistry'
      backup: yes

#-------------------Change offset---------------------------
#-------------------Copy api-manager.xml to hub-------------------
  - name: mig configurations in am gateway - copying api-manager.xml to repository/conf
    copy:
     src: "api-manager.xml"
     dest: "{{extract_location}}/{{hub_product}}/repository/conf/api-manager.xml"

#-------------------Point AuthManager and APIKeyValidator to IS------------------

#------ replacing the port and the IP  with the DNS name ----------------

  - name: mig configurations in am gateway - Point AuthManager and APIKeyValidator to IS
    replace:
      dest: "{{extract_location}}/{{hub_product}}/repository/conf/api-manager.xml"
      regexp: 'IS_NAME'
      replace: '{{is_name}}'
      backup: yes

  # - name: mig configurations in am gateway - Point AuthManager and APIKeyValidator to IS
  #   replace:
  #     dest: "{{extract_location}}/{{hub_product}}/repository/conf/api-manager.xml"
  #     regexp: 'IS_PORT'
  #     replace: '{{(is_https_port|int) + (mig_offset|int)}}'
  #     backup: yes
  #
  # - name: mig configurations in am gateway - Point AuthManager and APIKeyValidator to IS
  #   replace:
  #     dest: "{{extract_location}}/{{hub_product}}/repository/conf/api-manager.xml"
  #     regexp: 'IS_HOST'
  #     replace: '{{is_host}}'
  #     backup: yes

#-------------------Change KeyValidatorClientType in api-manager.xml in hub------------------
  - name: mig configurations in am gateway - Change KeyValidatorClientType in api-manager.xml in hub
    replace:
      dest: "{{extract_location}}/{{hub_product}}/repository/conf/api-manager.xml"
      regexp: 'KeyValidatorClientType>ThriftClient'
      replace: 'KeyValidatorClientType>WSClient'
      backup: yes

#-------------------Change EnableThriftServer to false in api-manager.xml in hub------------------
  - name: mig configurations in am gateway - Change KeyValidatorClientType in api-manager.xml in hub
    replace:
      dest: "{{extract_location}}/{{hub_product}}/repository/conf/api-manager.xml"
      regexp: 'EnableThriftServer>true'
      replace: 'EnableThriftServer>false'
      backup: yes

#-------------------Point AuthorizedAPI, RevokeAPI and TokenAPI to IS------------------
  - name: mig configurations in am gateway - Point AuthorizedAPI to IS
    replace:
      dest: "{{extract_location}}/{{hub_product}}/repository/deployment/server/synapse-configs/default/api/_AuthorizeAPI_.xml"
      regexp: 'https://{uri.var.hostname}:{uri.var.portnum}'
      replace: 'https://{{is_name}}'
      backup: yes

  - name: mig configurations in am gateway - Point RevokeAPI to IS
    replace:
      dest: "{{extract_location}}/{{hub_product}}/repository/deployment/server/synapse-configs/default/api/_RevokeAPI_.xml"
      regexp: 'https://{uri.var.hostname}:{uri.var.portnum}'
      replace: 'https://{{is_name}}'
      backup: yes

  - name: mig configurations in am gateway - Point TokenAPI to IS
    replace:
      dest: "{{extract_location}}/{{hub_product}}/repository/deployment/server/synapse-configs/default/api/_TokenAPI_.xml"
      regexp: 'https://{uri.var.hostname}:{uri.var.portnum}'
      replace: 'https://{{is_name}}'
      backup: yes

#-------------------Start the identity server-------------------
  - name: mig configurations in am gateway - Start API Manager
    shell: "{{extract_location}}/{{hub_product}}/bin/./wso2server.sh start"
    ignore_errors: True

#-------------------Wait for server to start-------------------
  - name: mig configurations in am gateway - Wait for server to start
    wait_for:
      port: "{{(https_port|int)+(hub_offset|int)}}"
      delay: 5
    ignore_errors: True

## FOLLOWING ARE COMMENTED AS THE MANAGE IS NO LOBGER IN THE GATEWAY

# #-------------------Change site.json according to the offset-----------------
#   - name: mig configurations in am gateway - Change https port in site.json file
#     replace:
#       dest: "{{extract_location}}/{{hub_product}}/repository/deployment/server/jaggeryapps/manage/site/conf/site.json"
#       regexp: '9443'
#       replace: '{{(https_port|int)+(hub_offset|int)}}'
#       backup: yes
#
#   - name: mig configurations in am gateway - Change http port in site.json file
#     replace:
#       dest: "{{extract_location}}/wso2telcohub-{{product_version}}/repository/deployment/server/jaggeryapps/manage/site/conf/site.json"
#       regexp: '9763'
#       replace: '{{(http_port|int) + (hub_offset|int)}}'
#       backup: yes
#
# #-------------------setup IS url in site.json------------------
#   - name: mig configurations in am gateway - Change IS url in site.json
#     replace:
#       dest: "{{extract_location}}/{{hub_product}}/repository/deployment/server/jaggeryapps/manage/site/conf/site.json"
#       regexp: '"IS_URL": "https://localhost:9444/"'
#       replace: '"IS_URL": "https://{{is_name}}/"'
#       backup: yes
#
#
# #-------------------Extract wso2telcohub-2.1.0 patch file-------------------
#   - unarchive:
#      src: "{{zip_location}}/WSO2Telco-DEP-{{product_version}}-001.zip"
#      dest: "{{extract_location}}/"
#      copy: no
#
# #------------------ Remove the existing file before copying the patch file-------------------
# # - name: Remove the existing file before copying the patch file
# #   shell: rm {{extract_location}}/wso2telcohub-{{product_version}}/repository/deployment/server/jaggeryapps/manage/modules/taskmanager/get.jag
# #   become: yes
# #   ignore_errors: False
#
#
#   - name: mig configuration - Remove the existing file before copying the patch file
#     file:
#       path: "{{extract_location}}/{{hub_product}}/repository/deployment/server/jaggeryapps/manage/modules/taskmanager/get.jag"
#       state: absent
#     ignore_errors: False
#
# #-------------------Copy the patch files-------------------
#   - name: mig configuration - copying patch file - get.jag
#     shell: cp {{ item }} {{extract_location}}/{{hub_product}}/repository/deployment/server/jaggeryapps/manage/modules/taskmanager
#     become: yes
#     with_items: "{{extract_location}}/WSO2Telco-DEP-{{product_version}}-001/resources/manage/modules/taskmanager/get.jag"
#     ignore_errors: False
